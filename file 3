# TSNE

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import fetch_openml

## Accessing the dataset

X,y=fetch_openml('mnist_784',version=1,return_X_y=True)

X.shape

X.head()

y.head()

y.value_counts()

X.iloc[1]

## Plotting the images

plt.imshow(X.iloc[1].to_numpy().reshape(28,28),'Greys')
plt.title(y[1]);

plt.imshow(X.iloc[10].to_numpy().reshape(28,28),'Greys')
plt.title(y[10]);

plt.imshow(X.iloc[100].to_numpy().reshape(28,28),'Greys')
plt.title(y[100]);

plt.imshow(X.iloc[1000].to_numpy().reshape(28,28),'Greys')
plt.title(y[1000]);

plt.imshow(X.iloc[5000].to_numpy().reshape(28,28),'Greys')
plt.title(y[5000]);

plt.imshow(X.iloc[25000].to_numpy().reshape(28,28),'Greys')
plt.title(y[25000]);

plt.imshow(X.iloc[50000].to_numpy().reshape(28,28),'Greys')
plt.title(y[50000]);

## Creating a random sample of 1K for 70K

np.random.seed(100)
sample=np.random.choice(X.shape[0],1000)
print(sample)

## Creating a new set of 1000

X1=X.iloc[sample,:]
X1.shape

X1.head()

y1=y[sample]

y1.shape

y1.head()

## Building the TSNE model

from sklearn.manifold import TSNE
tsne=TSNE(n_components=2,perplexity=30)

X_tsne=tsne.fit_transform(X1)
X_tsne.shape

X_tsne[0]

## Visualisation of the transformed points

plt.scatter(X_tsne[:,0],X_tsne[:,1]);

plt.scatter(X_tsne[:,0],X_tsne[:,1],c=y1.astype(float));

## Creating a DF for better visualisation

X_df=pd.DataFrame({'X0':X_tsne[:,0],
                  'X1':X_tsne[:,1],
                  'Label':y1})
X_df

plt.figure(figsize=(15,12))
sns.lmplot(data=X_df,x='X0',y='X1',hue='Label');

plt.figure(figsize=(15,12))
sns.lmplot(data=X_df,x='X0',y='X1',
           hue='Label',fit_reg=False);

Exercise:

Perform TSNE on wine dataset.

